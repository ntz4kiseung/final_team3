<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.mybatis.IPostDAO">
	
	<select id="myReviewList" resultType="com.test.mybatis.PostDTO">
		SELECT POSTID AS USERID, URL, NICKNAME, TITLE, CONTENTS, MEETDATE, ADDRSINAME, ADDRGUNAME
		FROM 
		(
		SELECT  P.POSTID AS POSTID, PT.URL AS URL, E.NICKNAME AS NICKNAME, P.TITLE AS TITLE, P.CONTENTS AS CONTENTS, P.MEETDATE AS MEETDATE, S.ADDRSINAME AS ADDRSINAME, G.ADDRGUNAME AS ADDRGUNAME, RANK() OVER(ORDER BY MEETDATE DESC) AS NUM
				FROM USER_ESSENTIAL E JOIN POST P
				ON E.USERID =P.USERID
				JOIN ADDR_GU G
				ON P.ADDRGUID= G.ADDRGUID
				JOIN ADDR_SI S
				ON G.ADDRSIID = S.ADDRSIID
		        JOIN USER_BADGE_LOG UBL
		        ON E.BADGELOGID = UBL.BADGELOGID
		        JOIN POINT PT
		        ON UBL.BADGEPOINTID = PT.BADGEPOINTID
				WHERE E.USERID = 'B001'
		        ORDER BY MEETDATE DESC
		)
		<![CDATA[ WHERE NUM>=1 AND NUM <=6 ]]>

	</select>
	
	<select id="reviewList" resultType="com.test.mybatis.PostDTO">
		SELECT J.USERID AS USERID, E.NICKNAME AS NICKNAME, PT.URL AS URL, P.TITLE AS TITLE, P.CONTENTS AS CONTENTS, P.MEETDATE AS MEETDATE, SI.ADDRSINAME AS ADDRSINAME, G.ADDRGUNAME AS ADDRGUNAME, S.STATUSNAME
		FROM POST P 
		JOIN JOIN J
		ON P.POSTID = J.POSTID
		JOIN STATUS S
		ON J.STATUSID = S.STATUSID
		JOIN USER_ESSENTIAL E
		ON P.USERID = E.USERID
		JOIN ADDR_GU G
		ON P.ADDRGUID = G.ADDRGUID
		JOIN ADDR_SI SI
		ON G.ADDRSIID = SI.ADDRSIID
        JOIN USER_BADGE_LOG UBL
        ON E.BADGELOGID = UBL.BADGELOGID
        JOIN POINT PT
        ON UBL.BADGEPOINTID = PT.BADGEPOINTID
		WHERE J.USERID = 'B001' AND E.USERID NOT IN('B001')
	</select>
	
	<select id="hostReview" resultType="com.test.mybatis.PostDTO">
		SELECT J.USERID AS USERID,E.NICKNAME AS NICKNAME,PT.URL AS URL, RANK() OVER(ORDER BY J.USERID) AS NUM
		FROM JOIN J
		JOIN USER_ESSENTIAL E
		ON J.USERID = E.USERID
		JOIN USER_BADGE_LOG UBL
		ON E.BADGELOGID = UBL.BADGELOGID
		JOIN POINT PT
		ON UBL.BADGEPOINTID = PT.BADGEPOINTID
		WHERE J.STATUSID='ST00003' AND J.POSTID='PT00778'
		ORDER BY NUM
	</select>
	
	<select id="guestReview" resultType="com.test.mybatis.PostDTO">
		SELECT P.POSTID AS USERID, E.NICKNAME AS NICKNAME, PT.URL AS URL, 0 AS NUM
		FROM POST P
		JOIN USER_ESSENTIAL E
		ON P.USERID = E.USERID
		JOIN USER_BADGE_LOG UBL
		ON E.BADGELOGID = UBL.BADGELOGID
		JOIN POINT PT
		ON UBL.BADGEPOINTID = PT.BADGEPOINTID
		WHERE P.POSTID = 'PT00778'
		UNION
		SELECT J.USERID AS USERID,E.NICKNAME AS NICKNAME,PT.URL AS URL, RANK() OVER(ORDER BY J.USERID) AS NUM
		FROM JOIN J
		JOIN USER_ESSENTIAL E
		ON J.USERID = E.USERID
		JOIN USER_BADGE_LOG UBL
		ON E.BADGELOGID = UBL.BADGELOGID
		JOIN POINT PT
		ON UBL.BADGEPOINTID = PT.BADGEPOINTID
		WHERE J.STATUSID='ST00003' AND J.POSTID='PT00778'
		ORDER BY NUM
	</select>
	
	
</mapper>


