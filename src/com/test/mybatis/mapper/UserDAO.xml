<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.test.mybatis.IUserDAO"> 
  	
  	<select id="myPageList" resultType="com.test.mybatis.UserDTO"> 
	SELECT DISTINCT UE.USERID, UE.NICKNAME,UE.NAME,UE.BIRTH,G.GENDER,UE.TEL,US.SNS, US.INTRODUCE
                ,UE.EMAIL,UE.BADGELOGID, BL.BADGEPOINTID ,P.BADGEPOINTNAME,P.URL,NVL2((SELECT C.CERTINAME 
                    FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
                    ON U.CERTIID = C.CERTIID 
                    WHERE U.USERID=  UE.USERID AND C.CERTIID = 'CT00001'),'휴대폰 인증 완료 ✔','') AS TELCHECK
                 , NVL2((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
                  ON U.CERTIID = C.CERTIID
                  WHERE U.USERID= UE.USERID AND C.CERTIID = 'CT00002'),'이메일 인증 완료 ✔' ,'') AS EMAILCHECK
                  ,ROUND(AVG(R.GRADE)OVER(),1) AS REVIEWGRADE 
	FROM USER_ESSENTIAL UE  JOIN USER_SUB US ON UE.USERID = US.USERID 
                        JOIN USER_BADGE_LOG BL ON UE.BADGELOGID=BL.BADGELOGID	                     
                        JOIN POINT P ON BL.BADGEPOINTID=P.BADGEPOINTID
                        JOIN REVIEW R ON UE.USERID = R.TAKEUSERID
                        JOIN GENDER G ON G.GENDERID = UE.GENDERID                      
	WHERE UE.USERID='BAHEELA'
	</select> 
  
  	<insert id = "userTelInsert">
		INSERT INTO USER_CERTIFICATION(ID, USERID, CODE, CERTIDATE, CERTIID)
		VALUES(USER_CERTIFICATION_SEQ.NEXTVAL, #{userId },  #{telCheck}, SYSDATE, 'CT00001')
 	</insert>
 	
 	<insert id = "userEmailInsert"> 	
 		INSERT INTO USER_CERTIFICATION(ID, USERID, CODE, CERTIDATE, CERTIID)
		VALUES(USER_CERTIFICATION_SEQ.NEXTVAL, #{userId },  #{emailCheck}, SYSDATE, 'CT00002')
 	</insert>
 	
 	<insert id = "userNewBadgeInsert">
 		INSERT INTO USER_BADGE_LOG(BADGELOGID, USERID, BADGEPOINTID) 
 		VALUES(ADD_ID('USER_BADGE_LOG', 'BADGELOGID', 'BL'), #{userId}, 'BP00011')
 	</insert>
 	
 	<select id = "userNewBadgeSelect" resultType = "java.lang.String">
 		SELECT BADGELOGID
		FROM USER_BADGE_LOG
		WHERE USERID = #{userId}
 	</select>
 	
 	<insert id = "userEssentialInsert">
 		INSERT INTO USER_ESSENTIAL(USERID, NICKNAME, NAME, BIRTH, GENDERID, TEL, EMAIL, REGISTERDATE, BADGELOGID)
		VALUES(#{user.userId }, #{user.nickname }, #{user.name } , TO_DATE(#{user.birth },'YYMMDD'), #{user.genderId }, #{user.tel }, #{user.email }, SYSDATE, #{badgelogid})
 	</insert>
 	
	<select id="checkId" resultType="java.lang.Integer">
		SELECT COUNT(USERID) AS COUNT
		FROM LOGIN
		WHERE UPPER(USERID) = UPPER(#{userid })
 	</select>
 	
 	<select id="checkNick" resultType="java.lang.Integer">
 		SELECT COUNT(NICKNAME) AS COUNT
		FROM USER_ESSENTIAL
		WHERE UPPER(NICKNAME) = UPPER(#{nickname })
 	</select>
 	
 	<insert id = "userLoginInsert">
 		INSERT INTO LOGIN(USERID, PWD, ROLEID)
		VALUES(#{userId }, CRYPTPACK.ENCRYPT(#{pwd }, 'JAVA006$'), 'RL00002')
 	</insert>
 	
 	 	<insert id = "userSubInsert">
 		INSERT INTO USER_SUB(ID, USERID, SNS, INTRODUCE)
		VALUES(USER_SUB_SEQ.NEXTVAL, #{userId }, #{sns }, #{introduce })
 	</insert>
 	
 	<!-- 회원가입 -->
 	
 	<select id="findIdTelCheck" resultType="java.lang.Integer">
	 	SELECT COUNT(*) AS COUNT
		FROM USER_ESSENTIAL
		WHERE NAME = #{name} AND TEL = #{tel}
 	</select>
 	
 	<select id="findIdEmailCheck" resultType="java.lang.Integer">
 		SELECT COUNT(*) AS COUNT
		FROM USER_ESSENTIAL
		WHERE NAME = #{name} AND EMAIL = #{email}
 	</select>
 	
 	<select id="findPwTelCheck" resultType="java.lang.Integer">
 		SELECT COUNT(*) AS COUNT
		FROM USER_ESSENTIAL
		WHERE UPPER(USERID) = UPPER(#{userId}) AND NAME = #{name} AND TEL = #{tel}
 	</select>
 	
 	<select id="findPwEmailCheck" resultType="java.lang.Integer">
 		SELECT COUNT(*) AS COUNT
		FROM USER_ESSENTIAL
		WHERE UPPER(USERID) = UPPER(#{userId}) AND NAME = #{name} AND EMAIL = #{email}
 	</select>
 	
 	<select id = "findIdTel" resultType="java.lang.String">
 		SELECT USERID
 		FROM USER_ESSENTIAL
 		WHERE NAME = #{name} AND TEL = #{tel}
 	</select>
 	
 	<select id = "findIdEmail" resultType="java.lang.String">
 		SELECT USERID
 		FROM USER_ESSENTIAL
 		WHERE NAME = #{name} AND EMAIL = #{email}
 	</select>		
 	
 	<update id = "findPwTemp">
		UPDATE LOGIN
		SET PWD = CRYPTPACK.ENCRYPT(#{pwd}, 'JAVA006$')
		WHERE UPPER(USERID) = UPPER(#{userId})
		
 	</update>
 	
 	<select id="findPwdString" resultType="java.lang.String">
 		SELECT CRYPTPACK.DECRYPT(#{pwdtemp}, 'JAVA006$')
		FROM LOGIN
		WHERE UPPER(USERID) = UPPER(#{userId})
 	</select>
 	
 	<insert id="findIdTelInsert">
	 	INSERT INTO USER_CERTIFICATION(ID, USERID, CODE, CERTIDATE, CERTIID)
		VALUES(USER_CERTIFICATION_SEQ.NEXTVAL, #{userId },  #{telCheck}, SYSDATE, 'CT00003')
	 </insert>
	 
	 <insert id="findIdEmailInsert">
	 	INSERT INTO USER_CERTIFICATION(ID, USERID, CODE, CERTIDATE, CERTIID)
		VALUES(USER_CERTIFICATION_SEQ.NEXTVAL, #{userId },  #{emailCheck}, SYSDATE, 'CT00004')
	 </insert>
	 
	 <insert id="findPwTelInsert">
	 	INSERT INTO USER_CERTIFICATION(ID, USERID, CODE, CERTIDATE, CERTIID)
		VALUES(USER_CERTIFICATION_SEQ.NEXTVAL, #{userId },  #{telCheck}, SYSDATE, 'CT00005')
	 </insert>
	 
	 <insert id="findPwEmailInsert">
	 	INSERT INTO USER_CERTIFICATION(ID, USERID, CODE, CERTIDATE, CERTIID)
		VALUES(USER_CERTIFICATION_SEQ.NEXTVAL, #{userId },  #{emailCheck}, SYSDATE, 'CT00006')
	 </insert>
	 
 	<!-- 아이디/비밀번호 확인 -->
 	
 	<select id ="checkIdPw" resultType="java.lang.Integer">
	 	SELECT COUNT(*) AS COUNT
		FROM LOGIN
		WHERE USERID = #{userId} AND CRYPTPACK.DECRYPT(PWD, 'JAVA006$') = UPPER(#{pwd})
	 </select>






<!-- 내 프로필 -->

	<select id="MyPageBad" resultType="com.test.mybatis.UserDTO"> 
		SELECT USERID, FN_PROFILE_BAD_BADGE(USERID) AS URLBAD
		FROM USER_ESSENTIAL
		WHERE USERID=#{userid}
	</select> 

	<select id="myPageAddrList" resultType="com.test.mybatis.AddrDTO"> 
		SELECT *
		FROM
		(
		    SELECT USERID ,ID ,ADDRSINAME AS ADDRSINAME1 , ADDRGUNAME AS ADDRGUNAME1
		                ,LEAD(ADDRSINAME,1) OVER (ORDER BY ID) AS ADDRSINAME2,LEAD(ADDRGUNAME,1) OVER (ORDER BY ID) AS ADDRGUNAME2
		                , LEAD(ADDRSINAME,2) OVER (ORDER BY ID) AS ADDRSINAME3,LEAD(ADDRGUNAME,2) OVER (ORDER BY ID) AS ADDRGUNAME3
                        ,ADDRSIID AS ADDRSIID1 , ADDRGUID AS ADDRGUID1
		                ,LEAD(ADDRSIID,1) OVER (ORDER BY ID) AS ADDRSIID2,LEAD(ADDRGUID,1) OVER (ORDER BY ID) AS ADDRGUID2
		                , LEAD(ADDRSIID,2) OVER (ORDER BY ID) AS ADDRSIID3,LEAD(ADDRGUID,2) OVER (ORDER BY ID) AS ADDRGUID3
		    FROM USERADDR_VIEW
		    WHERE USERID= #{userid}
		)
		WHERE ID=(SELECT MIN(ID) FROM USERADDR_VIEW WHERE USERID=#{userid})
	</select> 
	
	<select id="myPageInterList" resultType="com.test.mybatis.InterDTO"> 
		SELECT *
		FROM
		(
		    SELECT USERID ,ID ,INTERSUBNAME AS INTERSUBNAME1 , INTERMAINNAME AS INTERMAINNAME1
		                ,LEAD(INTERSUBNAME,1) OVER (ORDER BY ID) AS INTERSUBNAME2,LEAD(INTERMAINNAME,1) OVER (ORDER BY ID) AS INTERMAINNAME2
		                , LEAD(INTERSUBNAME,2) OVER (ORDER BY ID) AS INTERSUBNAME3,LEAD(INTERMAINNAME,2) OVER (ORDER BY ID) AS INTERMAINNAME3
                        ,INTERMAINID AS INTERMAINID1 , INTERSUBID AS INTERSUBID1
		                ,LEAD(INTERMAINID,1) OVER (ORDER BY ID) AS INTERMAINID2,LEAD(INTERSUBID,1) OVER (ORDER BY ID) AS INTERSUBID2
		                , LEAD(INTERMAINID,2) OVER (ORDER BY ID) AS INTERMAINID3,LEAD(INTERSUBID,2) OVER (ORDER BY ID) AS INTERSUBID3
		    FROM USERINTER_VIEW
		    WHERE USERID=#{userid}
		)
		WHERE ID=(SELECT MIN(ID) FROM USERINTER_VIEW WHERE USERID=#{userid})
	</select>  	
	
	<select id="myPageList" resultType="com.test.mybatis.UserDTO"> 
	SELECT DISTINCT UE.USERID, UE.NICKNAME,UE.NAME,UE.BIRTH,G.GENDER AS GENDERID,UE.TEL,US.SNS, US.INTRODUCE
                ,UE.EMAIL,UE.BADGELOGID, BL.BADGEPOINTID ,P.BADGEPOINTNAME,P.URL,NVL2((SELECT C.CERTINAME 
                    FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
                    ON U.CERTIID = C.CERTIID 
                    WHERE U.USERID=  UE.USERID AND C.CERTIID = 'CT00001'),'휴대폰 인증 완료 ✔','') AS TELCHECK
                 , NVL2((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
                  ON U.CERTIID = C.CERTIID
                  WHERE U.USERID= UE.USERID AND C.CERTIID = 'CT00002'),'이메일 인증 완료 ✔' ,'') AS EMAILCHECK
                  ,ROUND(AVG(R.GRADE)OVER(),1) AS REVIEWGRADE 
	FROM USER_ESSENTIAL UE  JOIN USER_SUB US ON UE.USERID = US.USERID 
                        JOIN USER_BADGE_LOG BL ON UE.BADGELOGID=BL.BADGELOGID	                     
                        JOIN POINT P ON BL.BADGEPOINTID=P.BADGEPOINTID
                        JOIN REVIEW R ON UE.USERID = R.TAKEUSERID
                        JOIN GENDER G ON G.GENDERID = UE.GENDERID                      
	WHERE UPPER(UE.USERID)=UPPER('ERVETAN')
	</select>
	
	
	<select id="userList" resultType="com.test.mybatis.UserDTO">
		SELECT USERID, NICKNAME, NAME, BIRTH, GENDERID, TEL, EMAIL
		FROM USER_ESSENTIAL
		WHERE UPPER(USERID) = UPPER(#{userid})
	</select>
	
	
	<!-- 프로필 변경 사용 -->
	
	
	<select id="checkGuPwd" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM LOGIN
		WHERE UPPER(USERID) = UPPER(#{userId}) AND PWD = CRYPTPACK.ENCRYPT(#{pwd}, 'JAVA006$')
	</select>
  

</mapper>
