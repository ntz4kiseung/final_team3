<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.test.mybatis.IBadgeDAO">  <!-- 인터페이스 지정  -->
  	
  	<select id="BadgeList1" resultType="com.test.mybatis.BadgeDTO"> 
	 SELECT  BADGEPOINTID,BADGEPOINTNAME
	 			, (SELECT COUNT(*)FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGECK
                , (SELECT BADGELOGID FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGELOGID
               , P.URL ,BADGEPOINTDESC1 , BADGEPOINTDESC2 
      FROM POINT P 
      WHERE P.BADGEPOINTCATEID ='BC00004'
      ORDER BY BADGEPOINTID 
	</select> 
	
	<select id="BadgeList1_count" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT 
		FROM
		(
	    SELECT POSTID, MIN(REVIEWDATE), MIN(REVIEWID) 
	    FROM REVIEW
	    WHERE TAKEUSERID = 'EDROSINK'
	    GROUP BY POSTID
		)	 
	</select>  
	
	
	<select id="BadgeList1_date" resultType="com.test.mybatis.BadgeDTO"> 
	<![CDATA[
		SELECT Y.BADGEDATE AS BADGEDATE
		FROM
		(
		SELECT ROWNUM AS NUM,X.*
		FROM 
		(
		SELECT POSTID, MIN(REVIEWDATE) AS BADGEDATE, MIN(REVIEWID) 
		FROM REVIEW
		WHERE TAKEUSERID = 'EDROSINK'
		GROUP BY POSTID
		ORDER BY MIN(REVIEWDATE)
		)X
		WHERE ROWNUM <= 15 
		)Y
		WHERE NUM = 1 OR NUM = 15 OR NUM = 30 OR NUM = 50
	]]>
	</select> 
	
	<select id="PointList" resultType="com.test.mybatis.PointLogDTO"> 
	<![CDATA[
	 	SELECT TAKEUSERID, GIVEUSERID ,BADGEPOINTID ,REVIEWDATE ,EXPIRATIONDATE
		FROM
		(
		SELECT *
		FROM POINT_LOG_VIEW
		WHERE TAKEUSERID = #{userId} AND BADGEPOINTID = #{badgePointId}
		ORDER BY REVIEWDATE DESC )  
		WHERE rownum <=5

	]]>
	</select> 
	
	
	
	
	 	
	<select id="BadgeList2" resultType="com.test.mybatis.BadgeDTO"> 
	  SELECT  BADGEPOINTID,BADGEPOINTNAME
	           ,(SELECT COUNT(*) FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGECK 
               , (SELECT BADGELOGID FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGELOGID
               , P.URL,BADGEPOINTDESC1 , BADGEPOINTDESC2
      FROM POINT P 
      WHERE P.BADGEPOINTCATEID ='BC00001'
      ORDER BY BADGEPOINTID 

	</select> 
	
	<select id="BadgeList3" resultType="com.test.mybatis.BadgeDTO"> 
	  SELECT BADGEPOINTID,BADGEPOINTNAME
	          ,(SELECT COUNT(*) FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGECK 
              , (SELECT BADGELOGID FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGELOGID
              , P.URL,BADGEPOINTDESC1 , BADGEPOINTDESC2
      FROM POINT P 
      WHERE P.BADGEPOINTCATEID ='BC00002'
      ORDER BY BADGEPOINTID 
	</select> 
	
	<select id="BadgeList4" resultType="com.test.mybatis.BadgeDTO"> 
	  SELECT  BADGEPOINTID,BADGEPOINTNAME
	  			,(SELECT COUNT(*) FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGECK 
               , (SELECT BADGELOGID FROM USERBADGELOG_VIEW WHERE BADGEPOINTID = P.BADGEPOINTID AND USERID='EDROSINK') AS BADGELOGID
               , P.URL,BADGEPOINTDESC1 , BADGEPOINTDESC2
      FROM POINT P 
      WHERE P.BADGEPOINTCATEID ='BC00003'
      ORDER BY BADGEPOINTID 
	</select> 
	
	<select id="positiveBadge" resultType="com.test.mybatis.BadgeDTO"> 
		SELECT BADGEPOINTID, BADGEPOINTNAME, BADGEPOINTCATEID,BADGEPOINTDESC2, URL
		FROM POINT
		WHERE BADGEPOINTCATEID='BC00001'
	</select>
	
	<select id="negativeBadge" resultType="com.test.mybatis.BadgeDTO"> 
		SELECT BADGEPOINTID, BADGEPOINTNAME, BADGEPOINTCATEID,BADGEPOINTDESC2, URL
		FROM POINT
		WHERE BADGEPOINTCATEID='BC00002'
	</select> 
	
	<select id="hostBadge" resultType="com.test.mybatis.BadgeDTO"> 
		SELECT BADGEPOINTID, BADGEPOINTNAME, BADGEPOINTCATEID,BADGEPOINTDESC2, URL
		FROM POINT
		WHERE BADGEPOINTCATEID='BC00003'
	</select>  
	
	<select id="randomMainBadge" resultType="com.test.mybatis.BadgeDTO">
	<![CDATA[
		SELECT *
		FROM
		(
		SELECT BADGEPOINTNAME, BADGEPOINTDESC1, URL, BADGEPOINTID
		FROM POINT
		ORDER BY DBMS_RANDOM.VALUE
		)
		WHERE ROWNUM<=2	
	]]>
	</select>
  
  	<select id="getUserList" resultType="java.lang.String">
  	<![CDATA[
	  	SELECT NICKNAME
		FROM
		(
		    SELECT NICKNAME
		    FROM USER_BADGE_LOG BL JOIN REVIEW RV ON BL.GETREVIEWID=RV.REVIEWID
		                           JOIN USER_ESSENTIAL UE ON BL.USERID=UE.USERID
		    WHERE BADGEPOINTID = #{badgePointId}
		    GROUP BY UE.NICKNAME, RV.REVIEWDATE
		    ORDER BY REVIEWDATE DESC
		)
		WHERE ROWNUM<=3
  	]]>
  	</select>
  	
  	<update id="mainBadge">
  		UPDATE USER_ESSENTIAL
		SET BADGELOGID=#{badgeLogId}
		WHERE USERID= 'EDROSINK'
  	</update>
  	
</mapper>
