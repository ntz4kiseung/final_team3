SELECT USER 
FROM DUAL;

ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM-DDHH24:MI:SS';

--○ 뷰 생성
CREATE OR REPLACE VIEW POST_VIEW
AS
SELECT P.USERID USERID, P.POSTID POSTID,P.TITLE TITLE, NVL(T.URL,'뉴비') URL, U.NICKNAME NICKNAME,P.POSTDATE POSTDATE, TO_DATE(P.MEETDATE, 'YYYY-MM-DDHH24:MI:SS') MEETDATE,S.ADDRSINAME ADDRSINAME,A.ADDRGUNAME ADDRGUNAME, NVL(P.ADDRDETAIL,'없음') ADDRDETAIL, M.INTERMAINNAME INTERMAINNAME, I.INTERSUBNAME INTERSUBNAME, NVL(P.INTERDETAIL,'없음') INTERDETAIL, D.DRINK DRINK,O.MOODNAME MOODNAME ,G.SAMEGENDER SAMEGENDER, P.CONTENTS CONTENTS, P.MINNUM MINNUM, P.MAXNUM MAXNUM, P.LIMITGRADE LIMITGRADE
FROM POST P LEFT JOIN USER_ESSENTIAL U
ON P.USERID = U.USERID
LEFT JOIN USER_BADGE_LOG L
ON U.BADGELOGID = L.BADGELOGID
LEFT JOIN POINT T
ON L.BADGEPOINTID = T.BADGEPOINTID
LEFT JOIN ADDR_GU A
ON P.ADDRGUID = A.ADDRGUID
LEFT JOIN ADDR_SI S
ON S.ADDRSIID = A.ADDRSIID
LEFT JOIN INTEREST_SUB I
ON P.INTERSUBID = I.INTERSUBID
LEFT JOIN INTEREST_MAIN M
ON I.INTERMAINID = M.INTERMAINID
LEFT JOIN DRINK D
ON D.DRINKID = P.DRINKID
LEFT JOIN SAME_GENDER G
ON G.SAMEGENDERID = P.SAMEGENDERID
LEFT JOIN MOOD O
ON P.MOODID = O.MOODID;

--○ 뷰 통해 POST 조회
SELECT USERID, URL, TITLE, NICKNAME, MEETDATE, ADDRSINAME, ADDRGUNAME, POSTDATE, ADDRDETAIL, INTERMAINNAME, INTERSUBNAME, INTERDETAIL, DRINK, MOODNAME, SAMEGENDER, CONTENTS, MINNUM, MAXNUM, LIMITGRADE
,NVL((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
ON U.CERTIID = C.CERTIID WHERE U.USERID= POST_VIEW.USERID AND C.CERTIID = 'CT00001'), '없음') TELCERTIID
, NVL((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
ON U.CERTIID = C.CERTIID WHERE U.USERID= POST_VIEW.USERID AND C.CERTIID = 'CT00002'), '없음') EMAILCERTIID
, NVL((SELECT ID FROM FOLLOW WHERE GIVEUSERID = 'ANLANT' AND TAKEUSERID = POST_VIEW.USERID), 0) FOLLOWID 
FROM POST_VIEW
WHERE POSTID = 'PT00002';

SELECT USERID, URL, TITLE, NICKNAME, MEETDATE, ADDRSINAME, ADDRGUNAME, POSTDATE, ADDRDETAIL, INTERMAINNAME, INTERSUBNAME, INTERDETAIL, DRINK, MOODNAME, SAMEGENDER, CONTENTS, MINNUM, MAXNUM, LIMITGRADE
,NVL((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
ON U.CERTIID = C.CERTIID WHERE U.USERID= POST_VIEW.USERID AND C.CERTIID = 'CT00001'), '없음') TELCERTIID
, NVL((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
ON U.CERTIID = C.CERTIID WHERE U.USERID= POST_VIEW.USERID AND C.CERTIID = 'CT00002'), '없음') EMAILCERTIID
, NVL((SELECT ID FROM FOLLOW WHERE GIVEUSERID = 'anlant' AND TAKEUSERID = POST_VIEW.USERID), 0) FOLLOWID
FROM POST_VIEW
WHERE POSTID = 'PT00002';

-- 팔로우인지 조회
SELECT *
FROM FOLLOW;

select *
from USER_ESSENTIAL
where userid ='anlant';
-- 팔로우 
INSERT INTO FOLLOW(ID, GIVEUSERID, TAKEUSERID, FOLLOWDATE) VALUES(FOLLOW_SEQ.NEXTVAL, 'B001', 'BAHEELA', SYSDATE);

-- 팔로우 해제
DELETE
FROM FOLLOW
WHERE GIVEUSERID = 'anlant' AND TAKEUSERID = 'BLUMBALD';

--○ 평점 평균
SELECT NVL(ROUND(AVG(GRADE)),1) TOTALGRADE
FROM REVIEW
WHERE TAKEUSERID = 'BLUMBALD';

--휴대폰 인증 조회
SELECT CERTINAME
FROM TEL_CERTIFICATION_CATE_VIEW
WHERE USERID = 'BLUMBALD';

-- 메일 인증 조회
SELECT CERTINAME
FROM MAIL_CERTIFICATION_CATE_VIEW
WHERE USERID = 'BLUMBALD';
-- 인증 여부 확인 뷰
SELECT *
FROM CERTI_VIEW
WHERE USERID = 'BLUMBALD';

SELECT *
FROM POST
WHERE USERID = 'BLUMBALD';
-- 댓글 조회 뷰 생성
CREATE OR REPLACE VIEW JOIN_VIEW
AS
SELECT P.POSTID POSTID, J.JOINID JOINID, U.USERID USERID, P.URL URL, U.NICKNAME NICKNAME, J.JOINDATE JOINDATE, J.CONTENTS CONTENTS, D.JOINID DELJOIN
FROM POST P JOIN JOIN J
ON P.POSTID = J.POSTID
LEFT JOIN USER_ESSENTIAL U 
ON J.USERID = U.USERID
LEFT JOIN USER_BADGE_LOG L
ON U.BADGELOGID = L.BADGELOGID
LEFT JOIN POINT P
ON L.BADGEPOINTID = P.BADGEPOINTID
LEFT JOIN DEL_JOIN D
ON J.JOINID = D.JOINID;


-- 댓글 조회 구문
SELECT POSTID, JOINID, USERID, NVL(URL,'없음'), NICKNAME, JOINDATE, CONTENTS, NVL(DELJOIN,'없음')
FROM JOIN_VIEW
WHERE POSTID = 'PT00002';

select *
from join;

select *
from status;
-- 댓글 삽입
INSERT INTO JOIN(JOINID, POSTID, USERID, STATUSID, CONTENTS, JOINDATE) VALUES(ADD_ID('JOIN','JOINID','JN'),'PT00002','anlant', 'ST00001','안녕하세요',SYSDATE);

-- 대댓글 뷰 생성
CREATE OR REPLACE VIEW REPLY_VIEW
AS
SELECT P.POSTID POSTID, J.JOINID JOINID,R.REPLYID REPLYID, U.USERID USERID, P.URL URL, U.NICKNAME NICKNAME, R.REPLYDATE JOINDATE, R.CONTENTS CONTENTS,D.ID DELJOIN,R.USERTYPEID USERTYPEID
FROM POST P JOIN JOIN J
ON P.POSTID = J.POSTID
LEFT JOIN USER_ESSENTIAL U 
ON J.USERID = U.USERID
LEFT JOIN USER_BADGE_LOG L
ON U.BADGELOGID = L.BADGELOGID
LEFT JOIN POINT P
ON L.BADGEPOINTID = P.BADGEPOINTID
LEFT JOIN REPLY R
ON J.JOINID = R.JOINID
LEFT JOIN DEL_REPLY D
ON R.REPLYID = D.REPLYID;

-- 대댓글 조회
SELECT JOINID, REPLYID, USERID, URL, NICKNAME, JOINDATE, CONTENTS, DELJOIN, USERTYPEID
FROM REPLY_VIEW
WHERE POSTID = 'PT00002';

select *
FROM REPLY_VIEW r left join join j
on j.joinid = r.joinid;

SELECT JOINID, NVL(REPLYID, '없음'), USERID, URL, NICKNAME, JOINDATE, CONTENTS, DELJOIN, NVL(USERTYPEID,'없음')
		FROM REPLY_VIEW;
-- 신고유형 서치
SELECT REPORTCATEID
FROM REPORT_CATE
WHERE REPORTCATENAME = '욕설';

-- 신고유형 조회
SELECT REPORTCATENAME
FROM REPORT_CATE;
-- 댓글 신고
SELECT ID, JOINID, USERID, REPORTCATEID, REPORTDETAIL, REPORTDATE
FROM REPORT_JOIN;

-- 댓글 신고 삽입
INSERT INTO REPORT_JOIN(ID, JOINID, USERID, REPORTCATEID, REPORTDETAIL, REPORTDATE) VALUES(REPORT_JOIN_SEQ, 'JN00001','BLUMBALD', '욕설', 'RC00001', SYSDATE);

SELECT ID, POSTID, USERID, REPORTCATEID, REPORTDETAIL, REPORTDATE
FROM REPORT_POST;

-- 게시글 신고
INSERT INTO REPORT_POST(ID, POSTID, USERID, REPORTCATEID, REPORTDETAIL, REPORTDATE) VALUES(REPORT_POST_SEQ.NEXTVAL, 'PT00002', 'anlant', 'RC00001', '욕설', SYSDATE);

------------------------------------
SELECT JOINID, POSTID, USERID, STATUSID, CONTENTS, JOINDATE
FROM JOIN;

-- 인증 여부확인 
SELECT USERID USERID
, NVL((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
ON U.CERTIID = C.CERTIID WHERE U.USERID='BLUMBALD' AND C.CERTIID = 'CT00001'), '없음') TELCERTIID
, NVL((SELECT C.CERTINAME FROM USER_CERTIFICATION U JOIN CERTIFICATION_CATE C
ON U.CERTIID = C.CERTIID WHERE U.USERID='BLUMBALD' AND C.CERTIID = 'CT00002'), '없음') EMAILCERTIID
FROM USER_CERTIFICATION
WHERE USERID = 'BLUMBALD';

select *
from REPLY;
SELECT P.POSTID POSTID, J.JOINID JOINID,R.REPLYID REPLYID, U.USERID USERID, P.URL URL, U.NICKNAME NICKNAME, J.JOINDATE JOINDATE, R.CONTENTS CONTENTS,D.ID DELJOIN,R.USERTYPEID USERTYPEID
FROM POST P JOIN JOIN J
ON P.POSTID = J.POSTID
LEFT JOIN USER_ESSENTIAL U 
ON J.USERID = U.USERID
LEFT JOIN USER_BADGE_LOG L
ON U.BADGELOGID = L.BADGELOGID
LEFT JOIN POINT P
ON L.BADGEPOINTID = P.BADGEPOINTID
LEFT JOIN REPLY R
ON J.JOINID = R.JOINID
LEFT JOIN DEL_REPLY D
ON R.REPLYID = D.REPLYID;



-- 현재 유저들의 대표뱃지
SELECT UE.USERID, UE.BADGELOGID, BL.BADGEPOINTID ,P.BADGEPOINTNAME
FROM USER_ESSENTIAL UE JOIN USER_BADGE_LOG BL ON UE.BADGELOGID=BL.BADGELOGID
                       JOIN POINT P ON BL.BADGEPOINTID=P.BADGEPOINTID;

-- 현재 유저들이 가지고 있는 뱃지
SELECT BL.USERID, MAX(BL.BADGELOGID) AS BADGELOGID, P.BADGEPOINTNAME
FROM USER_BADGE_LOG BL LEFT JOIN REVIEW RV ON BL.EXPIRATIONREVIEWID=RV.REVIEWID
                            JOIN POINT P ON BL.BADGEPOINTID=P.BADGEPOINTID
WHERE (ADD_MONTHS(RV.REVIEWDATE,12) >= SYSDATE OR SUBSTR(BL.BADGEPOINTID,3) >= 11)
GROUP BY BL.BADGEPOINTID, BL.USERID, P.BADGEPOINTNAME
ORDER BY USERID;