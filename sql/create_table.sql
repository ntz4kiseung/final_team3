---------------------------------------------------------- 노랑 ----------------------------------------------------------------
CREATE TABLE ROLE
( ROLEID    VARCHAR2(10)        -- RL00000
, ROLENAME  VARCHAR2(30)
,CONSTRAINT ROLE_ROLEID_FK PRIMARY KEY(ROLEID) 
);
--==>>Table ROLE이(가) 생성되었습니다.


CREATE TABLE FAQ
(ID         NUMBER              -- FAQ_SEQ
,TITLE      VARCHAR2(100)
,CONTENTS   CLOB
,FAQDATE    DATE
,CONSTRAINT FAQ_ID_PK PRIMARY KEY(ID)
);
--==>>Table FAQ이(가) 생성되었습니다.


CREATE TABLE NOTICE 
(ID             NUMBER          -- NOTICE_SEQ
,TITLE          VARCHAR2(100)
,CONTENTS       CLOB
,NOTICEDATE     DATE
, CONSTRAINT NOTICE_ID_PK PRIMARY KEY(ID)
);
--==>> Table NOTICE이(가) 생성되었습니다.


CREATE TABLE GENDER
(GENDERID   VARCHAR2(10)        -- GD00000
,GENDER    VARCHAR2(40)
,CONSTRAINT GENDER_GENDERID_PK PRIMARY KEY(GENDERID)
);
--==>> Table GENDER이(가) 생성되었습니다.



CREATE TABLE ADDR_SI
(ADDRSIID       VARCHAR2(10)    -- SI00000
,ADDRSINAME    VARCHAR2(30)
,CONSTRAINT ADDR_SI_ADDRSIID_PK PRIMARY KEY(ADDRSIID)
);
--==>> Table ADDR_SI이(가) 생성되었습니다.




CREATE TABLE INTEREST_MAIN
(INTERMAINID     VARCHAR2(10)   -- IM00000
,INTERMAINNAME   VARCHAR2(40)
,CONSTRAINT INTEREST_MAIN_INTERMAINID_PK PRIMARY KEY(INTERMAINID)
);
--==>> Table INTEREST_MAIN이(가) 생성되었습니다.



CREATE TABLE CERTIFICATION_CATE
(CERTIID    VARCHAR2(10)        -- CT00000
,CERTINAME   VARCHAR2(40)
,CONSTRAINT CERTI_CATE_CERTIID_PK PRIMARY KEY(CERTIID)
);
--==>> Table CERTIFICATION_CATE이(가) 생성되었습니다.



CREATE TABLE MOOD
(MOODID     VARCHAR2(10)        -- MD00000
, MOODNAME  VARCHAR2(40)
,CONSTRAINT MOOD_MOODID_PK PRIMARY KEY(MOODID)
);
--==>> Table MOOD이(가) 생성되었습니다.


CREATE TABLE DRINK 
(DRINKID   VARCHAR2(10)         -- DR00000
, DRINK    VARCHAR2(40)
,CONSTRAINT DRINK_DRINKID_PK PRIMARY KEY(DRINKID)
);
--==>> Table DRINK이(가) 생성되었습니다.

CREATE TABLE STATUS
(STATUSID   VARCHAR2(10)        -- ST00000
, STATUSNAME VARCHAR2(40)
, CONSTRAINT STATUSID_STATUSID_PK PRIMARY KEY(STATUSID)
);
--==>> Table STATUSID이(가) 생성되었습니다.


CREATE TABLE SAME_GENDER
(SAMEGENDERID   VARCHAR2(10)        -- SG00000
, SAMEGENDER    VARCHAR2(40)
,CONSTRAINT SAME_GENDER_SAMEGENDERID_PK PRIMARY KEY(SAMEGENDERID)
);
--==>> Table SAME_GENDER이(가) 생성되었습니다.


CREATE TABLE REPORT_CATE
(REPORTCATEID   VARCHAR2(10)        -- RC00000
, REPORTCATENAME VARCHAR2(40)
,CONSTRAINT REPORT_CATE_REPORTCATEID_PK PRIMARY KEY(REPORTCATEID)
);
--==>> Table REPORT_CATE이(가) 생성되었습니다.


CREATE TABLE REPLY_USER_TYPE
(USERTYPEID   VARCHAR2(10)          -- RU00000
, USERTYPENAME VARCHAR2(40)
,CONSTRAINT REPLY_USER_TYPE_USERTYPEID_PK PRIMARY KEY(USERTYPEID)
);
--==>> Table REPLY_USER_TYPE이(가) 생성되었습니다.


CREATE TABLE POINT_CATE
(BADGEPOINTCATEID   VARCHAR2(10)        -- BC00000
, BADGEPOINTCATENAME  VARCHAR2(40)
,CONSTRAINT POINT_CATE_BADGEPOINTCATEID_PK PRIMARY KEY(BADGEPOINTCATEID)
);
--==>> Table POINT_CATE이(가) 생성되었습니다

---------------------------------------------------------- 초록 ----------------------------------------------------------------

CREATE TABLE LOGIN
( USERID    VARCHAR2(30)                -- 아이디
, PWD       VARCHAR2(30)
, ROLEID    VARCHAR2(10)
, CONSTRAINT LOGIN_USERID_PK PRIMARY KEY(USERID)
);


CREATE TABLE ADDR_GU
( ADDRGUID      VARCHAR2(10)            -- GU00000
, ADDRGUNAME    VARCHAR2(30)
, ADDRSIID      VARCHAR2(10)
, CONSTRAINT ADDR_GU_ADDRGUID_PK PRIMARY KEY(ADDRGUID)
);

CREATE TABLE INTEREST_SUB
( INTERSUBID      VARCHAR2(10)          -- IS00000
, INTERSUBNAME    VARCHAR2(40)
, INTERMAINID     VARCHAR2(10)
, CONSTRAINT INTEREST_SUB_INTERSUBID_PK PRIMARY KEY(INTERSUBID)
);


CREATE TABLE POINT
( BADGEPOINTID      VARCHAR2(10)        -- BP00000
, BADGEPOINTNAME    VARCHAR2(40)
, BADGEPOINTCATEID  VARCHAR2(10)
, BADGEPOINTDESC1   VARCHAR2(1000)
, BADGEPOINTDESC2   VARCHAR2(1000)
, URL               VARCHAR2(100)
, CONDITION         NUMBER
, CONSTRAINT POINT_BADGEPOINTID_PK PRIMARY KEY(BADGEPOINTID)
);


---------------------------------------------------------- 파랑 ----------------------------------------------------------------

--○ ADMIN 파랑
CREATE TABLE ADMIN
(USERID VARCHAR2(10)                -- 아이디
,CONSTRAINT ADMIN_USERID_PK PRIMARY KEY(USERID)
);


--○ USER_ESSENTIAL 파랑
CREATE TABLE USER_ESSENTIAL
(USERID VARCHAR2(30)                -- 아이디
,NICKNAME VARCHAR2(30)
,NAME VARCHAR2(40)
,BIRTH DATE
,GENDERID VARCHAR2(10)
,TEL VARCHAR2(20)
,EMAIL VARCHAR2(40)
,REGISTERDATE DATE
,BADGELOGID VARCHAR2(10)
,CONSTRAINT USER_USERID_PK PRIMARY KEY(USERID)
);



---------------------------------------------------------- 보라 ----------------------------------------------------------------

--○ direct_question 보라
CREATE TABLE DIRECT_QUESTION
(ID NUMBER                      -- DIRECT_QUESTION_SEQ
,TITLE VARCHAR2(100)
,USERID VARCHAR2(30)
,CONTENTS CLOB
,DIRECTQUESTIONDATE DATE
,CONSTRAINT DIRECTQUESTION_ID_PK PRIMARY KEY(ID)
);

--○ USER_ADDR 보라
CREATE TABLE USER_ADDR
(ID NUMBER                      -- USER_ADDR_SEQ
,USERID VARCHAR2(30)
,ADDRGUID VARCHAR2(10)
,CONSTRAINT USERADDR_ID_PK PRIMARY KEY(ID)
);
--○ USER_SUB 보라
CREATE TABLE USER_SUB
(ID NUMBER                      -- USER_SUB_SEQ
,USERID VARCHAR2(30)
,SNS VARCHAR2(40)
,INTRODUCE VARCHAR2(4000)
,CONSTRAINT USER_SUB_ID_PK PRIMARY KEY(ID)
);

--○ USER_SUB 보라
CREATE TABLE DEL_USER
(ID NUMBER                      -- DEL_USER_SEQ
,USERID VARCHAR2(30)
,DELETEDATE DATE
,CONSTRAINT DELUSER_ID_PK PRIMARY KEY(ID)
);

--○ FOLLOW 보라
CREATE TABLE FOLLOW
(ID NUMBER                      -- FOLLOW_SEQ
,GIVEUSERID VARCHAR2(30)
,TAKEUSERID VARCHAR2(30)
,FOLLOWDATE DATE
,CONSTRAINT FOLLOW_ID_PK PRIMARY KEY(ID)
);

--○ USER_INTEREST 보라
CREATE TABLE USER_INTEREST
(ID NUMBER                          -- USER_INTEREST_SEQ
,USERID VARCHAR2(30)
,INTERNAME VARCHAR2(10)
,CONSTRAINT USER_INTEREST_ID_PK PRIMARY KEY(ID)
);


--○ USER_CERTIFICATION 보라
CREATE TABLE USER_CERTIFICATION
(ID NUMBER                          -- USER_CERTIFICATION_SEQ
,USERID VARCHAR2(30)
,CODE VARCHAR2(20)
,CERTIDATE DATE
,CERTIID VARCHAR2(40)
,CONSTRAINT USER_CERTIFICATION_ID_PK PRIMARY KEY(ID)
);

--○ MESSAGE 보라 
CREATE TABLE MESSAGE
(MESSAGEID VARCHAR2(10)             -- MS00000
,GIVEUSERID VARCHAR2(30)
,TAKEUSERID VARCHAR2(30)
,CONTENTS VARCHAR2(4000)
,SENDDATE DATE
,CHECKDATE DATE
,CONSTRAINT MESSAGE_MESSAGEID_PK PRIMARY KEY(MESSAGEID)
);


--○ POST 보라 
CREATE TABLE POST
(POSTID VARCHAR2(40)                -- PT00000
,USERID VARCHAR2(30)
,TITLE VARCHAR2(100)
,ADDRGUID VARCHAR2(10)
,ADDRDETAIL VARCHAR2(100)
,INTERESTSUBID VARCHAR2(10)
,INTERESTDETAIL VARCHAR2(100)
,MEETDATE DATE
,POSTDATE DATE
,CONTENTS CLOB
,MOODID VARCHAR2(10)
,LIMITGRADE NUMBER
,MINNUM NUMBER
,MAXNUM NUMBER
,DRINKID VARCHAR2(10)
,SAMEGENDERID VARCHAR2(10)
,CONSTRAINT POST_POSTID_PK PRIMARY KEY(POSTID)
);



---------------------------------------------------------- 주황 ----------------------------------------------------------------

CREATE TABLE DEL_MESSAGE
( ID            NUMBER                     -- DEL_MESSAGE_SEQ
, MESSAGEID     VARCHAR2(10)
, DELETEDATE    DATE
, USERID        VARCHAR2(30)
, CONSTRAINT DEL_MESSAGE_ID_PK PRIMARY KEY(ID)
);

CREATE TABLE DEL_POST
( ID            NUMBER                      -- DEL_POST_SEQ
, POSTID        VARCHAR2(10)
, DELETEDATE    DATE
, CONSTRAINT DEL_POST_ID_PK PRIMARY KEY(ID)
);

CREATE TABLE REPORT_POST
( ID            NUMBER                      -- REPORT_POST_SEQ
, POSTID        VARCHAR2(10)
, USERID        VARCHAR2(30)
, REPORTCATEID  VARCHAR2(10)
, REPORTDETAIL  VARCHAR2(4000)
, REPORTDATE    DATE
, CONSTRAINT REPORT_POST_ID_PK PRIMARY KEY(ID)
);


CREATE TABLE JOIN
( JOINID    VARCHAR2(10)                    -- JN00000
, POSTID    VARCHAR2(10)
, USERID    VARCHAR2(30)
, STATUSID  VARCHAR2(10)
, CONTENTS   VARCHAR2(4000)
, JOINDATE  DATE
, CONSTRAINT JOIN_JOINID_PK PRIMARY KEY(JOINID)
);



CREATE TABLE REVIEW
( REVIEWID      VARCHAR2(10)                -- RV00000
, POSTID        VARCHAR2(10)
, GIVEUSERID    VARCHAR2(30)
, TAKEUSERID    VARCHAR2(30)
, GRADE         NUMBER
, REVIEWDATE    DATE
, CONSTRAINT REVIEW_REVIEWID_PK PRIMARY KEY(REVIEWID)
);



---------------------------------------------------------- 분홍 ----------------------------------------------------------------

--○ REPORT_JOIN 테이블 생성
CREATE TABLE REPORT_JOIN
( ID            NUMBER                      -- REPORT_JOIN_SEQ
, JOINID        VARCHAR2(10)
, USERID        VARCHAR2(10)
, REPORTCATEID    VARCHAR2(10)
, REPORTDETAIL  VARCHAR2(4000)
, REPORTDATE    DATE
,CONSTRAINT REPORT_JOIN_ID_PK PRIMARY KEY(ID)
);
--○ DEL_JOIN 테이블 생성
CREATE TABLE DEL_JOIN
( ID        NUMBER                          -- DEL_JOIN_SEQ
, JOINID    VARCHAR2(10)
, DELETEDATE      DATE
, CONSTRAINT DEL_JOIN_ID_PK PRIMARY KEY(ID)
);
--○ REPLY 테이블 생성
CREATE TABLE REPLY
( REPLYID       VARCHAR2(10)                -- RP00000
, JOINID        VARCHAR2(10)
, CONTENTS       VARCHAR2(4000)
, REPLYDATE     DATE
, USERTYPEID    VARCHAR2(10)
, CONSTRAINT REPLY_REPLYID_PK PRIMARY KEY(REPLYID)
);

--○ REVIEW_SUB 테이블 생성
CREATE TABLE REVIEW_SUB
( ID            NUMBER                  -- REVIEW_SUB_SEQ
, REVIEWID      VARCHAR2(10)
, BADGEPOINTID  VARCHAR2(10)
, CONTENTS      VARCHAR2(4000)
, CONSTRAINT REVIEW_SUB_ID_PK PRIMARY KEY(ID)
);
--○ USER_BADGE_LOG 테이블 생성
CREATE TABLE USER_BADGE_LOG
( BADGELOGID            VARCHAR2(10)            -- BL00000
, USERID                VARCHAR2(30)
, BADGEPOINTID          VARCHAR2(10)
, GETREVIEWID           VARCHAR2(10)
, EXPIRATIONREVIEWID    VARCHAR2(10)
, CONSTRAINT USER_BADGE_LOG_BADGELOGID_PK PRIMARY KEY(BADGELOGID)
);



---------------------------------------------------------- 빨강 ----------------------------------------------------------------

--○ DEL_REPLY 테이블 생성
CREATE TABLE DEL_REPLY
( ID            NUMBER                      -- DEL_REPLY_SEQ
, REPLYID       VARCHAR2(10)
, DELETEDATE    DATE
, CONSTRAINT DEL_REPLY_ID_PK PRIMARY KEY(ID)
);

--○ REPORT_REPLY 테이블 생성
CREATE TABLE REPORT_REPLY
( ID            NUMBER                  -- REPORT_REPLY_SEQ
, REPLYID       VARCHAR2(10)
, UESRID        VARCHAR2(30)
, REPORTCATEID    VARCHAR2(10) 
, REPORTDETAIL  VARCHAR2(4000)
, REPORTDATE    DATE
, CONSTRAINT REPORT_REPLY_ID_PK PRIMARY KEY(ID)
);


